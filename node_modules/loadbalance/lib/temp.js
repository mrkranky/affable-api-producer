
	for (var i = 0; i < )

	var wildcards = 0
	var sum = 0

	debug('summing up the weights, counting wildcards and some basic varification')
	for (var i = 0; i < pool.length; i++) {
		var weight = pool[i].weight

		if (weight === '*') {
			wildcards++
			continue
		}

		if (typeof(weight) !== 'number') {
			throw new Error('invalid weight in index ' + i)
		}

		if (weight === 0) {
			throw new Error('zero weight at index ' + i)
		}

		sum += weight
	}

	debug('weights sum is %d', sum)
	debug('star weights count is %d', wildcards)

	if (sum < 1 && wildcards.length === 0) {
		throw new Error('invalid weights, they must add up to 1, sum was: ' + sum)
	}

	if (wildcards.length > 0 && sum === 1) {
		throw new Error('some object have a wildcard weight, but explicit weights already add up to 1, if you have wildcard weights, the explicit ones must add up to less than 1')
	}

	var wildcardWeight

	if (wildcards > 0) {
		// determine the weight of the wildcard objects
		wildcardWeight = (1 - sum) / wildcards
		debug('wildcardWeight is %d', wildcardWeight)
	}

	// assign real weights to wildcards and determine the precision
	for (var i = 0; i < pool.length; i++) {
		var entry = pool[i]

		if (entry.weight === '*') {
			entry.weight = wildcardWeight
		}

		entry.precision = findPrecision(entry.weight)
		debug('weight %d precision is %d', entry.weight, entry.precision)
	}

	debug('sorting pool...')
		// sort weight by precision
	pool.sort(function(a, b) {
		return b.precision - a.precision
	})

	// normalize
	var exponent = pool[0].precision

	debug('biggest exponent is %d', exponent)
	var adjustedWeights = []
	var minWeight = Infinity

	for (var i = 0; i < pool.length; i++) {
		var entry = pool[i]
		var weightPrecision = findPrecision(entry.weight)

		entry.adjustedWeight = entry.weight * Math.pow(10, weightPrecision) * Math.pow(10, exponent - weightPrecision)
		adjustedWeights.push(entry.adjustedWeight)
		
		if (entry.adjustedWeight < minWeight) {
			minWeight = entry.adjustedWeight
		}

		debug('entry weight %d was adjusted to %d', entry.weight, entry.adjustedWeight)
	}

	console.log(adjustedWeights)

	pool.forEach(function (entry) {
		console.log(entry.weight, entry.adjustedWeight/minWeight)
	})
	
	// adjustedWeights.forEach(function (w) {
	// 	console.log(w, w / lcm)
	// })

	debug(pool)

	// at this point all the weights should be verified and are explicit numbers. 
	//	if ()